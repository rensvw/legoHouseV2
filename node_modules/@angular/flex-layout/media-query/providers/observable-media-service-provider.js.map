{"version":3,"file":"observable-media-service-provider.js","sourceRoot":"","sources":["observable-media-service-provider.ts"],"names":[],"mappings":"OAOO,EAAC,YAAY,EAAE,sBAAsB,EAAC,MAAM,6BAA6B;OACzE,EAAC,kBAAkB,EAAC,MAAM,qCAAqC;OAC/D,EAAC,UAAU,EAAC,MAAM,gBAAgB;AAIzC;;;GAGG;AACH,OAAO,IAAM,8BAA8B,GAAG;IAC5C,OAAO,EAAE,sBAAsB;IAC/B,QAAQ,EAAE,YAAY;IACtB,IAAI,EAAE,CAAC,UAAU,EAAE,kBAAkB,CAAC;CACvC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaService, ObservableMediaService} from '../observable-media-service';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media';\n\nimport {OpaqueToken} from '@angular/core'; // tslint:disable-line:no-unused-variable\n\n/**\n *  Provider to return observable to ALL MediaQuery events\n *  Developers should build custom providers to override this default MediaQuery Observable\n */\nexport const ObservableMediaServiceProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMediaService,\n  useClass: MediaService,\n  deps: [MatchMedia, BreakPointRegistry]\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}